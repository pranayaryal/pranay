{"name":"Pranay","tagline":"","body":"### Welcome to GitHub Pages.\r\nPush Your App to GitHub\r\n\r\nCreated by Alyson La, @realalysonla\r\n\r\nThings you need before you get started\r\n\r\nGit & GitHub\r\n\r\nCheck if Git is installed\r\nIn the terminal type git --version (1.8 or higher preferred)\r\nIf not, download Git [here] (http://git-scm.com/downloads). Then, setup your local Git profile - In the terminal:\r\nType git config --global user.name \"your-name\"\r\nType git config --global user.email \"your-email\"\r\n\r\nTo check if Git is already config-ed you can type git config --list\r\nCreate a free GitHub account or login if you already have one\r\nCOACH: Talk a little about git, verison control, and open source\r\n\r\nPush your app to GitHub using the command line\r\n\r\nOn your GitHub profile click “new repo” screen shot 2013-06-01 at 12 38 50 pm give it a name (example: rails-girls), brief description, choose the “public” repo option, and click “create repository”.\r\n\r\nIn the command line–make sure you cd into your railgirls folder–and type:\r\n\r\ngit init\r\n\r\nThis initializes a git repository in your project\r\n\r\nNote: If you’ve already done the Heroku guide, then you’ve already initialized a git repository & you can move on to the next steps.\r\n\r\nNext check if a file called READEME.rdoc exists in your railsgirl directory:\r\n\r\ndir README.rdoc\r\nChoose your operating system: Windows | Other\r\nIf the file doesn’t exist, create it by typing:\r\n\r\ntouch README.rdoc\r\n\r\nCOACH: Talk a little about README.rdoc\r\n\r\nThen type:\r\n\r\ngit status\r\n\r\nThis will list out all the files in your working directory.\r\n\r\nCOACH: Talk about some of your favorite git commands\r\n\r\nThen type:\r\n\r\ngit add .\r\n\r\nThis adds in all of your files & changes so far to a staging area.\r\n\r\nThen type:\r\n\r\ngit commit -m \"first commit\"\r\n\r\nThis commits all of your files, adding the message “first commit”\r\n\r\nNext type:\r\n\r\ngit remote add origin https://github.com/username/rails-girls.git\r\n\r\nYour GitHub Repository page will list the repository URL, so feel free to copy and paste from there, rather than typing it in manually. You can copy and paste the link from your GitHub repository page by clicking the clipboard icon next to the URL.\r\n\r\nThis creates a remote, or connection, named “origin” pointing at the GitHub repository you just created.\r\n\r\nThen type:\r\n\r\ngit push -u origin master\r\n\r\nThis sends your commits in your “master” branch to GitHub\r\n\r\nCongratulations your app is on GitHub! Go check it out by going to the same url you used above: https://github.com/username/rails-girls (without the .git part)\r\n\r\nIf you want to continue making changes and pushing them to GitHub you’ll just need to use the following three commands:\r\n\r\ngit add .\r\n\r\ngit commit -m \"type your commit message here\"\r\n\r\ngit push origin master\r\n\r\nWhat’s next?\r\n\r\nBe a Part of the Open Source Community\r\n\r\nFollow your fellow Rails Girls & coaches on GitHub\r\nStar or watch their projects\r\nFork a repo, then clone and push changes to your fork. Share the changes with the originator by sending them a pull request!\r\nCreate an issue on a project when you find a bug\r\nExplore other open source projects - search by programming languange or key word\r\nLearn more Git\r\n\r\nCheck out trygit.org\r\nUse a Git Cheatsheet\r\nLook up Git Commands at git-scm.org","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}